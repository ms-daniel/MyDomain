# Imagem base para build do Angular
FROM node:18 AS build-stage

# Defina o diretório de trabalho dentro do contêiner
WORKDIR /app

# Copie os arquivos de configuração e de dependências
COPY package*.json ./

# Instalar CLI do Angular
RUN npm install -g @angular/cli

# Instale as dependências do projeto
RUN npm install

# Copie todos os arquivos do projeto para o contêiner
COPY . .

# Execute a build do projeto Angular
RUN npm run build --prod

# Imagem para servir a aplicação com Nginx
FROM nginx:latest AS production-stage

# Instalar o Certbot e Cron
RUN apt-get update && apt-get install -y certbot cron

# Criar o diretório de destino para a build
RUN mkdir -p /var/www/main-site

# Copiar os arquivos da build do Angular para o novo diretório
COPY --from=build-stage /app/dist/my-domain/browser /var/www/main-site

# Copiar arquivo de configuração personalizado do Nginx (adicionando, não substituindo)
COPY conf/main.conf /etc/nginx/conf.d/mydomain.conf

# Definir permissões apropriadas nos diretórios necessários
#RUN chmod -R 755 /var/www/main-site /var/www/certbot && \
#    chown -R nginx:nginx /var/www/main-site /var/www/certbot

# Copiar o script de inicialização do Certbot (opcional, caso queira automatizar a renovação)
COPY scripts/renew_certificates.sh /usr/local/bin/renew_certificates.sh
RUN chmod +x /usr/local/bin/renew_certificates.sh

# Adicionar o cron job para renovação do certificado
RUN echo "0 0 * * 1 /usr/local/bin/renew_certificates.sh" | crontab -

# Expor as portas 80 e 443
EXPOSE 80 443

# Iniciar o Nginx
CMD ["nginx", "-g", "daemon off;"]

# quando rodar o container pela primeira vez é necessario gerar o certificado:
# certbot certonly --webroot -w /var/www/certbot -d msdaniel.com.br --email ms_danniel@outlook.com --agree-tos --no-eff-email
